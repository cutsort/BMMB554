<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lectures on BMMB554</title>
    <link>https://nekrut.github.io/BMMB554/post/</link>
    <description>Recent content in Lectures on BMMB554</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://nekrut.github.io/BMMB554/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lecture 9: Calling variants I</title>
      <link>https://nekrut.github.io/BMMB554/lecture9/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nekrut.github.io/BMMB554/lecture9/</guid>
      <description>We will call variants in three COVID-19 isolates using several variant calling tools.
 Go to Galaxy workshop site Create an account Import history from here  This is the list of fields we will be extracting:
CHROM POS REF ALT DP AF SB DP4 EFF[*].IMPACT EFF[*].FUNCLASS EFF[*].EFFECT EFF[*].GENE EFF[*].</description>
    </item>
    
    <item>
      <title>Lecture 8: Assembling reads into genomes</title>
      <link>https://nekrut.github.io/BMMB554/lecture8/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nekrut.github.io/BMMB554/lecture8/</guid>
      <description>Genome assembly is a difficult task. In trying to explain it I will be relying on two primary sources:
 Ben Langmead&amp;rsquo;s Teaching Materials Pevzner and Compeau Bioinformatics Book  Genomes and reads: Strings and k-mers k-mer composition Genomes are strings of text. When we sequence genomes we use sequencing machines that generate reads. For now let&amp;rsquo;s assume that all reads have the same length k and every k-mer is sequenced only once.</description>
    </item>
    
    <item>
      <title>Lecture 6: Sequence alignment I</title>
      <link>https://nekrut.github.io/BMMB554/lecture6/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nekrut.github.io/BMMB554/lecture6/</guid>
      <description>The cover image shows pairwise alignments for human, mouse, and dog KIF3 locus from Dubchak et al. 2000.
WarmUp with Python Loops  Open this notebook Make a copy of it in your drive Go through it and execute all cells  Introduction to dynamic programming (Based on dynamic programming examples from InteractivePython) and excellent alignment lecture materials from Ben Langmead.
Suppose you are a cashier who&amp;rsquo;s job is, generally speaking, to receive money and to give out change.</description>
    </item>
    
    <item>
      <title>Lecture 5: Mapping Reads II</title>
      <link>https://nekrut.github.io/BMMB554/lecture5/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nekrut.github.io/BMMB554/lecture5/</guid>
      <description>Prep the environment Install conda, configure path and channles:
!wget -c https://repo.continuum.io/archive/Anaconda3-5.1.0-Linux-x86_64.sh !chmod +x Anaconda3-5.1.0-Linux-x86_64.sh !bash ./Anaconda3-5.1.0-Linux-x86_64.sh -b -f -p /usr/local import sys sys.path.append(&amp;#39;/usr/local/lib/python3.6/site-packages/&amp;#39;) !conda config --add channels defaults !conda config --add channels bioconda !conda config --add channels conda-forge Mount the drive and copy duplex files into notebook filesystem (in my specific case I created bmmb554_data directiory at the root of my drive):
cp /content/drive/My\ Drive/bmmb554_data/r1* ./ Mapping data with bwa and processing with samtools ls Install bwa [also see Li:2012] :</description>
    </item>
    
    <item>
      <title>Lecture 4: Mapping Reads I</title>
      <link>https://nekrut.github.io/BMMB554/lecture4/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nekrut.github.io/BMMB554/lecture4/</guid>
      <description>WarmUp with Python Numbers  Open this notebook Make a copy of it in your drive Go through it and execute all cells  In the previous lecture we uploaded data and performed QC. The outcome of this analysis is a set of Illumina reads that are ready to be mapped. Before we map we should understand the theory behind this process.
Mapping versus alignment One possible idea on how to speed things up will be to first find most likely locations for each read and them refine alignments as necessary.</description>
    </item>
    
    <item>
      <title>Lecture 3: Defining project and getting data</title>
      <link>https://nekrut.github.io/BMMB554/lecture3/</link>
      <pubDate>Tue, 28 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nekrut.github.io/BMMB554/lecture3/</guid>
      <description>WarmUp with Python Strings  Open this notebook Make a copy of it in your drive Go through it and execute all cells  The project The goal of our project will be finding a perfect variant caller for non-diploid data (e.g., viral, bacterial, organellar).
For this we will use two datasets:
 An HIV resequencing data from the DC cohort study A duplex sequencing dataset from an experimental evolution study  The idea is to use duplex data as the &amp;ldquo;golden standard&amp;rdquo; and then apply the best caller we find to HIV data and see if we can find anything interesting.</description>
    </item>
    
    <item>
      <title>Lecture 2: What is the nature of sequencing data?</title>
      <link>https://nekrut.github.io/BMMB554/lecture2/</link>
      <pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nekrut.github.io/BMMB554/lecture2/</guid>
      <description>The 50s, 60s and the 70s The difficulty with sequencing nucleic acids is nicely summarized by Hutchinson:2007:
  The chemical properties of different DNA molecules were so similar that it appeared difficult to separate them. The chain length of naturally occurring DNA molecules was much greater than for proteins and made complete sequencing seems unapproachable. The 20 amino acid residues found in proteins have widely varying properties that had proven useful in the separation of peptides.</description>
    </item>
    
    <item>
      <title>Lecture 1: Basic machinery = Jupyter &#43; Python</title>
      <link>https://nekrut.github.io/BMMB554/lecture1/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nekrut.github.io/BMMB554/lecture1/</guid>
      <description>Welcome to Notebooks An important assumption for this lecture is that (1) you have a Google account, (2) know how to use Google Drive, and (3) also have an active GitHub account.  When you start an analysis, you don&amp;rsquo;t really know how it will go. Maybe data is bad and there is no real reason to analyze anything at all. Maybe data data outliers that need to be dealt with.</description>
    </item>
    
  </channel>
</rss>